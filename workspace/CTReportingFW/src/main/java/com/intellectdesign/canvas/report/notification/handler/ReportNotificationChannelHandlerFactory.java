/** * Copyright 2014. Intellect Design Arena Limited. All rights reserved.  *  * These materials are confidential and proprietary to Intellect Design Arena  * Limited and no part of these materials should be reproduced, published, transmitted * or distributed in any form or by any means, electronic, mechanical, photocopying,  * recording or otherwise, or stored in any information storage or retrieval system  * of any nature nor should the materials be disclosed to third parties or used in any  * other manner for which this is not authorized, without the prior express written  * authorization of Intellect Design Arena Limited. */package com.intellectdesign.canvas.report.notification.handler;import com.intellectdesign.canvas.alert.handler.IChannelHandler;import com.intellectdesign.canvas.logger.Logger;/** * The ReportNotificationListenerFactory class provides methods to get the instance of appropriate ReportPublisher. It * is a singleton class. To get the instance use ReportNotificationListenerFactory.getInstance(). *  *//** * @version 1.0 */public class ReportNotificationChannelHandlerFactory{	/**	 * This method provides the instance of the ReportNotificationListenerFactory. Classes using this factory class must	 * use this method to get an instance of the class.	 * 	 * @return ReportNotificationListenerFactory	 */	public static ReportNotificationChannelHandlerFactory getInstance()	{		return instance;	}	/***	 * This method returns the instance of the type IChannelHandler for the given class name.	 * 	 * @param reportPublisherClassName - the report notification channel handler class name	 * @return IChannelHandler	 */	public IChannelHandler getNotificationChannelHandler(String notificationChannelHandlerClassName)	{		logger.ctinfo("CTREP00341");		IChannelHandler channelHandler = null;		try		{			channelHandler = (IChannelHandler) Class.forName(notificationChannelHandlerClassName).newInstance();		} catch (InstantiationException instantiationException)		{			logger.cterror("CTREP00342", instantiationException);		} catch (IllegalAccessException illegalAccessException)		{			logger.cterror("CTREP00343", illegalAccessException);		} catch (ClassNotFoundException classNotFoundException)		{			logger.cterror("CTREP00344", classNotFoundException);		} catch (Exception exception)		{			logger.cterror("CTREP00057", exception);		}		logger.ctinfo("CTREP00345");		return channelHandler;	}	/***	 * Private constructor to make the class singleton.	 */	private ReportNotificationChannelHandlerFactory()	{	}	/**	 * ReportEngineFactory instance.	 */	private static ReportNotificationChannelHandlerFactory instance = new ReportNotificationChannelHandlerFactory();	/**	 * logger.	 */	private static Logger logger = Logger.getLogger(ReportNotificationChannelHandlerFactory.class);}