/** * Copyright 2014. Intellect Design Arena Limited. All rights reserved.  *  * These materials are confidential and proprietary to Intellect Design Arena  * Limited and no part of these materials should be reproduced, published, transmitted * or distributed in any form or by any means, electronic, mechanical, photocopying,  * recording or otherwise, or stored in any information storage or retrieval system  * of any nature nor should the materials be disclosed to third parties or used in any  * other manner for which this is not authorized, without the prior express written  * authorization of Intellect Design Arena Limited. *  */cbx.namespace("iportal.workspace.menu");/** * Constants object to be used for MENU Initialization and Operation */iportal.workspace.menu.constant = {	EVENT_LOAD : 'ONLOAD',	EVENT_CLICK : 'ONCLICK',	MENU_PANEL : 'MENU_PANEL',	EVENT_DRILL_DOWN_MENU : 'EVENT_DRILL_DOWN_MENU'};MENUCLICKTIMESET = 0;var IWMC = iportal.workspace.menu.constant;/** * @class "iportal.workspace.menu.handler" * @description Is a Singleton class used for registering menu item event handlers by the developer. The Framework *              classes and compoented will be wiring events to this class for recevicing appropriate handlers for menu *              items and executin them. * @example The developer will use the following construct to register an handler for a menu item: *          IWMH.registerHandler("ITEM_ID", "IWMC.EVENT", "function definition/ reference"); * */iportal.workspace.menu.handler = function (){	var _ob = null;	return {		getInstance : function ()		{			if (_ob === null)			{				_ob = {					/**					 * @Method registerHandler					 * @memberof "iportal.workspace.menu.handler"					 * @access public					 * @description Intended to register a Hanlder.					 * @param {String} id Handler id/name					 * @param {String} event Event Id					 * @param {Function} ob - Handler object needs to be registered					 * @example					 * 					 * <pre>					 * IWMH.registerHandler(&quot;DELETE_WORKSPACE&quot;, IWMC.EVENT_CLICK, function (config)					 * {					 * 	CBXDOWNLOADMGR.requestScripts(cbx.downloadProvider.getMergedArray([ &quot;APPSTORE&quot; ]), function ()					 * 	{					 * 		cbx.appstore.Jsutil.deleteAppstore();					 * 	});					 * });					 * </pre>					 */					registerHandler : function (id, event, ob)					{						_ob[id + "_" + event] = ob;					},					/**					 * @Method getHandler					 * @memberof "iportal.workspace.menu.handler"					 * @description Intended to return Handelr. if bundle object not already added for given handler					 *              id/name. It would return empty object.					 * @param {String} id Handler id/name					 * @param {String} event Event Name					 * @param {String} config					 * @access private					 * @return {Object} ob - Handler object					 */					getHandler : function (id, event, config)					{						var reOb = _ob[id + "_" + event];						if (reOb != null)						{							return reOb						} else						{							return {};						}					},					eventRasiedTimeStamp : null,					executeHandler : function (id, event, config)					{						var reOb = _ob[id + "_" + event];						if (reOb != null)						{							if ("function" == typeof reOb)							{								var dt = new Date();								if (this.eventRasiedTimeStamp == null)								{									this.eventRasiedTimeStamp = dt;								}								if (dt == this.eventRasiedTimeStamp											|| dt >= this.eventRasiedTimeStamp.add(Date.SECOND, MENUCLICKTIMESET))								{									this.eventRasiedTimeStamp = dt;									return reOb(config)								} else								{									return {};								}							} else							{								return reOb							}						} else						{							return {};						}					}				};			}			return _ob;		}	};}();/** * @global * @description Workspace Menu Handler for handling the menus.See iportal.workspace.menu.handler for more details * @example *  * <pre> * IWMH.registerHandler(&quot;&lt;Menu Id&gt;&quot;, IWMC.EVENT_CLICK, function (config) * { * 	//Do the stuffs * 		}); * </pre> */IWMH = iportal.workspace.menu.handler.getInstance();IWMH.registerHandler("DELETE_WORKSPACE", IWMC.EVENT_CLICK, function (config){	CBXDOWNLOADMGR.requestScripts(cbx.downloadProvider.getMergedArray([ "APPSTORE" ]), function ()	{		cbx.appstore.Jsutil.deleteAppstore();	});});IWMH.registerHandler("UPDATE_WORKSPACE", IWMC.EVENT_CLICK, function (config){	CBXDOWNLOADMGR.requestScripts(cbx.downloadProvider.getMergedArray([ "APPSTORE" ]), function ()	{		cbx.appstore.Jsutil.updateAppstore();	});});IWMH.registerHandler("NOTES_MENU", IWMC.EVENT_DRILL_DOWN_MENU, function (config){	CBXDOWNLOADMGR.requestScripts(cbx.downloadProvider.getMergedArray([ "NOTES" ]), function ()	{		iportal.preferences.getNotesDtl(cbx.form.notesForm , this, config);	});});