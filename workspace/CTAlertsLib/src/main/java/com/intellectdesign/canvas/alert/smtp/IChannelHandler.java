/** * Copyright 2014. Intellect Design Arena Limited. All rights reserved.  *  * These materials are confidential and proprietary to Intellect Design Arena  * Limited and no part of these materials should be reproduced, published, transmitted * or distributed in any form or by any means, electronic, mechanical, photocopying,  * recording or otherwise, or stored in any information storage or retrieval system  * of any nature nor should the materials be disclosed to third parties or used in any  * other manner for which this is not authorized, without the prior express written  * authorization of Intellect Design Arena Limited. *  */package com.intellectdesign.canvas.alert.smtp;import java.util.HashMap;import com.intellectdesign.canvas.alert.handler.AlertDetail;import com.intellectdesign.canvas.alert.handler.AlertHandlerException;import com.intellectdesign.canvas.event.Event;/** * The interface models and encapsulates all processes and objects required for sending a notification over a channel. *   * @version 1.0 */public interface IChannelHandler{	/**	 * This method is used to send messages through appropriate channel	 * 	 * @param event - Event object that contains the event data	 * @param alertDetail - AlertDetail object that contains the alert data	 * @param hmMsgData - Hashmap of the alert message that contains the message and subscribed receipients	 * 	 * @throws AlertHandlerException	 */	public void sendMessage(Event event, AlertDetail alertDetail, HashMap hmMsgData) throws AlertHandlerException;	/**	 * This method is used to set the Channel Id	 * 	 * @param sChannelId - String value of the Alert Channel Id 	 */	public void setChannelId(String sChannelId);	/**	 * This method is used to get the Alert Channel Id	 * 	 * @return channelId - String value of the Alert Channel Id	 */	public String getChannelId();	/**	 * This method is used to set the name of the channel 	 * 	 * @param sChannelName - String value of the Channel Name 	 */	public void setChannelName(String sChannelName);	/**	 * This method is used to get the channel name	 * 	 * @return sChannelName - String value of the Channel Name 	 */	public String getChannelName();	/**	 * This method is used to post messages to the subscribed users over the channel subscribed. 	 * 	 * @param eventDetails - Event object that contains the Event data	 * @param alertDetails - AlertDetail object that contains the Alert Data	 * @param alertData - Hashmap object that contains the Alert Message	 * @throws AlertHandlerException	 */	public void postMessage(Event eventDetails, AlertDetail alertDetails, HashMap alertData)			throws AlertHandlerException; // CHCR}