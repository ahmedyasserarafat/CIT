/** * Copyright 2014. Intellect Design Arena Limited. All rights reserved.  *  * These materials are confidential and proprietary to Intellect Design Arena  * Limited and no part of these materials should be reproduced, published, transmitted * or distributed in any form or by any means, electronic, mechanical, photocopying,  * recording or otherwise, or stored in any information storage or retrieval system  * of any nature nor should the materials be disclosed to third parties or used in any  * other manner for which this is not authorized, without the prior express written  * authorization of Intellect Design Arena Limited. *  */package com.intellectdesign.canvas.properties.reader;import java.util.PropertyResourceBundle;import java.util.ResourceBundle;import com.intellectdesign.canvas.logger.Logger;/** * This is the class to get the Reporting Framework properties from ReportingFW.properties file. *  * @version 1.0 */public class ReportingProperties{	public static String propertyFileName = "ReportingFW";	private static ResourceBundle bundle = getProperties();	/**	 * This method get property file value from provided property name	 * 	 * @param propertyName - denotes the Property name.	 * @return propertyValue - denotes the Property value for the given input property name.	 */	public static String getProperty(String propertyName)	{		String propertyValue = "";		try		{			if (bundle != null && propertyName != null && propertyName.trim().length() > 0)			{				propertyValue = bundle.getString(propertyName);			}		} catch (Exception exception)		{			LOGGER.cterror("CTPRU00001", exception, propertyName);		}		return propertyValue;	}	/**	 * This method used to get the resource bundle	 * 	 * 	 * @return ResourceBundle	 */	private static ResourceBundle getProperties()	{		ResourceBundle aBundle = null;		try		{			aBundle = PropertyResourceBundle.getBundle(propertyFileName+"en_US");		} catch (Exception exp)		{			LOGGER.cterror("CTPRU00002", exp, ReportingProperties.propertyFileName+"en_US");		}		return aBundle;	}	private static final Logger LOGGER = Logger.getLogger(ReportingProperties.class);}